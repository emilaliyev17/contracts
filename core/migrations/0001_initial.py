# Generated by Django 5.2.6 on 2025-09-24 16:48

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_name', models.CharField(help_text='Name/title of the contract', max_length=255)),
                ('contract_number', models.CharField(help_text='Unique contract identifier', max_length=100, unique=True)),
                ('pdf_file', models.FileField(help_text='Path to uploaded PDF contract', upload_to='contracts/')),
                ('upload_date', models.DateTimeField(auto_now_add=True, help_text='When contract was uploaded')),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Last modification timestamp')),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('completed', 'Completed'), ('error', 'Error')], default='uploaded', help_text='Processing status', max_length=20)),
                ('total_value', models.DecimalField(decimal_places=2, help_text='Total contract value', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('AUD', 'Australian Dollar')], default='USD', help_text='Contract currency', max_length=3)),
                ('start_date', models.DateField(help_text='Contract start date')),
                ('end_date', models.DateField(help_text='Contract end date')),
                ('client_name', models.CharField(help_text='Client/counterparty name', max_length=255)),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('extraction_method', models.CharField(choices=[('manual', 'Manual Entry'), ('automated', 'Automated Extraction'), ('ai_assisted', 'AI Assisted Extraction')], default='manual', help_text='Method used to extract contract data', max_length=20)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, help_text='Confidence score for automated extraction (0-100)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
            ],
            options={
                'verbose_name': 'Contract',
                'verbose_name_plural': 'Contracts',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone_name', models.CharField(help_text='Name of the payment milestone', max_length=255)),
                ('milestone_description', models.TextField(blank=True, help_text='Description of what triggers this payment')),
                ('due_date', models.DateField(help_text='When payment is due')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of total contract', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue')], default='pending', help_text='Payment status', max_length=20)),
                ('payment_reference', models.CharField(blank=True, help_text='Reference number for payment', max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='When milestone was created')),
                ('modified_date', models.DateTimeField(auto_now=True, help_text='Last modification timestamp')),
                ('contract', models.ForeignKey(help_text='Associated contract', on_delete=django.db.models.deletion.CASCADE, related_name='payment_milestones', to='core.contract')),
            ],
            options={
                'verbose_name': 'Payment Milestone',
                'verbose_name_plural': 'Payment Milestones',
                'ordering': ['due_date', 'created_date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentTerms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('wire_transfer', 'Wire Transfer'), ('check', 'Check'), ('ach', 'ACH'), ('credit_card', 'Credit Card'), ('cryptocurrency', 'Cryptocurrency'), ('other', 'Other')], help_text='Method of payment', max_length=50)),
                ('payment_frequency', models.CharField(choices=[('one_time', 'One Time'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semi_annual', 'Semi-Annual'), ('annual', 'Annual'), ('milestone_based', 'Milestone Based')], help_text='How often payments occur', max_length=50)),
                ('late_fee_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Late fee percentage', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('grace_period_days', models.IntegerField(default=0, help_text='Days before late fees apply', validators=[django.core.validators.MinValueValidator(0)])),
                ('early_payment_discount', models.DecimalField(blank=True, decimal_places=2, help_text='Early payment discount percentage', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('bank_details', models.JSONField(blank=True, default=dict, help_text='Bank account information (encrypted)')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='When terms were created')),
                ('modified_date', models.DateTimeField(auto_now=True, help_text='Last modification timestamp')),
                ('contract', models.OneToOneField(help_text='Associated contract', on_delete=django.db.models.deletion.CASCADE, related_name='payment_terms', to='core.contract')),
            ],
            options={
                'verbose_name': 'Payment Terms',
                'verbose_name_plural': 'Payment Terms',
            },
        ),
    ]
